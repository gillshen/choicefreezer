# Generated by Django 4.2.4 on 2023-08-14 15:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('target', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_type', models.CharField(choices=[('Pre-College', 'Pre-College'), ('UG Freshman', 'UG Freshman'), ('UG Transfer', 'UG Transfer'), ('Master', 'Master'), ('Doctorate', 'Doctorate'), ('Other', 'Other')], max_length=100)),
                ('starts_as', models.CharField(choices=[('Grade 9', 'Grade 9'), ('Grade 9 (Retake)', 'Grade 9 (Retake)'), ('Grade 10', 'Grade 10'), ('Grade 10 (Retake)', 'Grade 10 (Retake)'), ('Grade 11', 'Grade 11'), ('Grade 11 (Retake)', 'Grade 11 (Retake)'), ('Grade 12', 'Grade 12'), ('Grade 12 (Retake)', 'Grade 12 (Retake)'), ('Year 1', 'Year 1'), ('Year 1 (Retake)', 'Year 1 (Retake)'), ('Year 2', 'Year 2'), ('Year 2 (Retake)', 'Year 2 (Retake)'), ('Year 3', 'Year 3'), ('Year 3 (Retake)', 'Year 3 (Retake)'), ('Year 4', 'Year 4'), ('Year 4 (Retake)', 'Year 4 (Retake)')], max_length=50)),
                ('start_year', models.IntegerField()),
                ('start_term', models.CharField(choices=[('Fall', 'Fall'), ('Spring', 'Spring'), ('Summer', 'Summer'), ('Spring-Summer', 'Spring-Summer'), ('Winter', 'Winter')], max_length=50)),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('end_term', models.CharField(blank=True, choices=[('Fall', 'Fall'), ('Spring', 'Spring'), ('Summer', 'Summer'), ('Spring-Summer', 'Spring-Summer'), ('Winter', 'Winter')], max_length=50)),
                ('curriculum', models.CharField(blank=True, choices=[('AP', 'AP'), ('IBDP', 'IBDP'), ('A-Level', 'A-Level'), ('IGCSE', 'IGCSE'), ('Gaokao', 'Gaokao')], max_length=50)),
                ('majors', models.CharField(blank=True, max_length=100)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='enrollments', to='target.school')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='TOEFL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('reading', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('listening', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('speaking', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('writing', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_scores', to='core.student')),
            ],
            options={
                'verbose_name_plural': 'TOEFL scores',
            },
        ),
        migrations.CreateModel(
            name='SAT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('ebrw', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('math', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_scores', to='core.student')),
            ],
            options={
                'verbose_name_plural': 'SAT scores',
            },
        ),
        migrations.CreateModel(
            name='IELTS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('listening', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('reading', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('writing', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('speaking', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_scores', to='core.student')),
            ],
            options={
                'verbose_name_plural': 'IELTS scores',
            },
        ),
        migrations.CreateModel(
            name='GRE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('verbal', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('quant', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('writing', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_scores', to='core.student')),
            ],
            options={
                'verbose_name_plural': 'GRE scores',
            },
        ),
        migrations.CreateModel(
            name='GPA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progression', models.CharField(choices=[('Grade 9', 'Grade 9'), ('Grade 9 (Retake)', 'Grade 9 (Retake)'), ('Grade 10', 'Grade 10'), ('Grade 10 (Retake)', 'Grade 10 (Retake)'), ('Grade 11', 'Grade 11'), ('Grade 11 (Retake)', 'Grade 11 (Retake)'), ('Grade 12', 'Grade 12'), ('Grade 12 (Retake)', 'Grade 12 (Retake)'), ('Year 1', 'Year 1'), ('Year 1 (Retake)', 'Year 1 (Retake)'), ('Year 2', 'Year 2'), ('Year 2 (Retake)', 'Year 2 (Retake)'), ('Year 3', 'Year 3'), ('Year 3 (Retake)', 'Year 3 (Retake)'), ('Year 4', 'Year 4'), ('Year 4 (Retake)', 'Year 4 (Retake)')], max_length=50)),
                ('term', models.CharField(choices=[('Fall', 'Fall'), ('Spring', 'Spring'), ('Summer', 'Summer'), ('Spring-Summer', 'Spring-Summer'), ('Winter', 'Winter')], max_length=50)),
                ('value', models.DecimalField(decimal_places=3, max_digits=6)),
                ('scale', models.DecimalField(decimal_places=3, max_digits=6)),
                ('is_cumulative', models.BooleanField(default=False)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='student.enrollment')),
            ],
            options={
                'verbose_name_plural': 'GPAs',
            },
        ),
        migrations.CreateModel(
            name='DET',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('overall', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('literacy', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('comprehension', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('conversation', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('production', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_scores', to='core.student')),
            ],
            options={
                'verbose_name_plural': 'DET scores',
            },
        ),
        migrations.CreateModel(
            name='ClassRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progression', models.CharField(choices=[('Grade 9', 'Grade 9'), ('Grade 9 (Retake)', 'Grade 9 (Retake)'), ('Grade 10', 'Grade 10'), ('Grade 10 (Retake)', 'Grade 10 (Retake)'), ('Grade 11', 'Grade 11'), ('Grade 11 (Retake)', 'Grade 11 (Retake)'), ('Grade 12', 'Grade 12'), ('Grade 12 (Retake)', 'Grade 12 (Retake)'), ('Year 1', 'Year 1'), ('Year 1 (Retake)', 'Year 1 (Retake)'), ('Year 2', 'Year 2'), ('Year 2 (Retake)', 'Year 2 (Retake)'), ('Year 3', 'Year 3'), ('Year 3 (Retake)', 'Year 3 (Retake)'), ('Year 4', 'Year 4'), ('Year 4 (Retake)', 'Year 4 (Retake)')], max_length=50)),
                ('term', models.CharField(choices=[('Fall', 'Fall'), ('Spring', 'Spring'), ('Summer', 'Summer'), ('Spring-Summer', 'Spring-Summer'), ('Winter', 'Winter')], max_length=50)),
                ('class_size', models.PositiveIntegerField(blank=True, null=True)),
                ('rank', models.PositiveIntegerField(blank=True, null=True)),
                ('top_x', models.PositiveIntegerField(blank=True, null=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_ranks', to='student.enrollment')),
            ],
        ),
        migrations.CreateModel(
            name='AP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('subject', models.CharField(max_length=100)),
                ('score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_scores', to='core.student')),
            ],
            options={
                'verbose_name_plural': 'AP scores',
            },
        ),
        migrations.CreateModel(
            name='ACT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('english', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('math', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('reading', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('science', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('writing', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_scores', to='core.student')),
            ],
            options={
                'verbose_name_plural': 'ACT scores',
            },
        ),
        migrations.CreateModel(
            name='StudentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField(blank=True, max_length=1000)),
                ('pinned', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='core.student')),
            ],
            options={
                'ordering': ['-pinned', '-updated'],
                'get_latest_by': ['pinned', 'updated'],
                'indexes': [models.Index(fields=['-pinned', '-updated'], name='student_stu_pinned_cc53bb_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='gpa',
            constraint=models.UniqueConstraint(models.F('enrollment'), models.F('progression'), models.F('term'), models.F('is_cumulative'), name='unique_gpa_enrollment_progression_term_iscumulative'),
        ),
        migrations.AddConstraint(
            model_name='classrank',
            constraint=models.UniqueConstraint(models.F('enrollment'), models.F('progression'), models.F('term'), name='unique_classrank_enrollment_progression_term'),
        ),
        migrations.AddConstraint(
            model_name='classrank',
            constraint=models.CheckConstraint(check=models.Q(('rank__isnull', False), models.Q(('top_x__isnull', False), ('top_x__lte', 100)), _connector='OR'), name='classrank_requires_either_rank_or_valid_topx'),
        ),
        migrations.AddConstraint(
            model_name='classrank',
            constraint=models.CheckConstraint(check=models.Q(('rank__isnull', True), ('class_size__isnull', False), _connector='OR'), name='classrank_requires_classsize_if_given_rank'),
        ),
    ]
